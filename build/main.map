{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/players/index.js","webpack:///./src/players/resolvers.js","webpack:///./src/players/typeDefs.js","webpack:///./src/shema.js","webpack:///external \"apollo-server-express\"","webpack:///external \"body-parser\"","webpack:///external \"express\"","webpack:///external \"graphql-tools\""],"names":["app","express","use","bodyParser","urlencoded","extended","json","server","ApolloServer","schema","applyMiddleware","listen","port","console","log","makeExecutableSchema","typeDefs","resolvers","players","name","image","Query","mergeSchemas","schemas","playerSchema"],"mappings":";;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA,MAAMA,GAAG,GAAGC,8CAAO,EAAnB;AACAD,GAAG,CAACE,GAAJ,CAAQC,kDAAU,CAACC,UAAX,CAAsB;AAAEC,UAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAL,GAAG,CAACE,GAAJ,CAAQC,kDAAU,CAACG,IAAX,EAAR;AAEA,MAAMC,MAAM,GAAG,IAAIC,kEAAJ,CAAiB;AAAEC,wDAAMA;AAAR,CAAjB,CAAf;AACAF,MAAM,CAACG,eAAP,CAAuB;AAAEV;AAAF,CAAvB;AAEAA,GAAG,CAACW,MAAJ,CAAW;AAAEC,MAAI,EAAE;AAAR,CAAX,EAA2B,MAAM;AAC/BC,SAAO,CAACC,GAAR,CAAY,mCAAZ,EAD+B,CACmB;AACnD,CAFD,E;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA,MAAML,MAAM,GAAGM,0EAAoB,CAAC;AAClCC,6DADkC;AAElCC,+DAASA;AAFyB,CAAD,CAAnC;AAKeR,qEAAf,E;;;;;;;;;;;;ACTA;AAAA,MAAMS,OAAO,GAAG,CACd;AACEC,MAAI,EAAE,cADR;AAEEC,OAAK,EAAE;AAFT,CADc,CAAhB;AAOe;AACbC,OAAK,EAAE;AACLH,WAAO,EAAE,MAAMA;AADV;AADM,CAAf,E;;;;;;;;;;;;ACPA;AAAgB;;;;;;;;;CAAhB,E;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEeI,iIAAY,CAAC;AAC1BC,SAAO,EAAE,CACPC,gDADO;AADiB,CAAD,CAA3B,E;;;;;;;;;;;;;;;;;;;;;;;ACHA,kD;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,0C","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import express from 'express';\nimport bodyParser from 'body-parser';\nimport { ApolloServer } from 'apollo-server-express';\nimport schema from './shema';\n\nconst app = express();\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\n\nconst server = new ApolloServer({ schema });\nserver.applyMiddleware({ app });\n\napp.listen({ port: 4000 }, () => {\n  console.log('ðŸš€  Server listening on port 4000'); // eslint-disable-line no-console\n});\n","import { makeExecutableSchema } from 'graphql-tools';\nimport typeDefs from './typeDefs';\nimport resolvers from './resolvers';\n\nconst schema = makeExecutableSchema({\n  typeDefs,\n  resolvers,\n});\n\nexport default schema;\n","const players = [\n  {\n    name: 'Mats hummels',\n    image: 'https://pbs.twimg.com/profile_images/976109234906640384/YQJK5Ilz_400x400.jpg',\n  },\n];\n\nexport default {\n  Query: {\n    players: () => players,\n  },\n};\n","export default `\n  type Player {\n    name: String\n    image: String\n  }\n\n  type Query {\n    players: [Player]\n  }\n`;\n","import { mergeSchemas } from 'graphql-tools';\nimport playerSchema from './players';\n\nexport default mergeSchemas({\n  schemas: [\n    playerSchema,\n  ],\n});\n","module.exports = require(\"apollo-server-express\");","module.exports = require(\"body-parser\");","module.exports = require(\"express\");","module.exports = require(\"graphql-tools\");"],"sourceRoot":""}